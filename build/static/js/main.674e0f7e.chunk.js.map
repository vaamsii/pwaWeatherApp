{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","feels_like","temp_max","temp_min","humidity","src","icon","alt","description","coord","lon","lat","ReactDOM","render","document","getElementById"],"mappings":"+NAMaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDCsEVC,G,MAvEH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPV,EADO,KACAW,EADA,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,KAIRC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACE,UAAVc,EAAEC,IADM,gCAEYjB,EAAaC,GAFzB,OAEDQ,EAFC,OAIPK,EAAWL,GACXG,EAAS,IALF,2CAAH,sDASZ,OACI,sBAAKM,UAAU,iBAAf,UACK,oBAAIA,UAAU,UAAd,SACW,8DAEZ,uBACIC,KAAK,OACLD,UAAU,SACVE,YAAY,yBACZC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QAAOG,WAAYT,IAEzDF,EAAQY,MACL,sBAAKP,UAAU,OAAf,UACI,qBAAIA,UAAU,YAAd,UACI,+BAAOL,EAAQa,OACf,8BAAMb,EAAQc,IAAIC,aAEtB,sBAAKV,UAAU,YAAf,UACKW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,2CAEJ,sBAAKb,UAAU,kBAAf,UACI,gDACCW,KAAKC,MAAMjB,EAAQY,KAAKO,YACzB,2CAEJ,sBAAKd,UAAU,mBAAf,UACI,2CACCW,KAAKC,MAAMjB,EAAQY,KAAKQ,UACzB,yCACA,0CACCJ,KAAKC,MAAMjB,EAAQY,KAAKS,UACzB,4CAEJ,sBAAKhB,UAAU,gBAAf,UACI,8CACCW,KAAKC,MAAMjB,EAAQY,KAAKU,UACzB,yCAEJ,sBAAKjB,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAYkB,IAAG,4CAAuCvB,EAAQA,QAAQ,GAAGwB,KAA1D,WAAyEC,IAAKzB,EAAQA,QAAQ,GAAG0B,cAC/H,4BAAI1B,EAAQA,QAAQ,GAAG0B,iBAE3B,sBAAKrB,UAAU,mBAAf,UACI,gDACCL,EAAQ2B,MAAMC,IACf,wCACA,gDACC5B,EAAQ2B,MAAME,IACf,mDC/DxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.674e0f7e.chunk.js","sourcesContent":["import axios from 'axios';\n\n// this api from open weather map\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\nexport const fetchWeather = async (query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n\n    return data;\n}","import React, { useState } from 'react';\n\nimport { fetchWeather } from './api/fetchWeather';\nimport './App.css';\n\nconst App = () => {\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({}); //we are setting the weather to the data we recieve from API\n    \n    const search = async (e) => {\n        if(e.key === 'Enter') { //once the search is done this will run\n            const data = await fetchWeather(query); //we will fetch the weather data based of the search\n\n            setWeather(data);\n            setQuery(''); //this will reset the query\n        }\n    }\n\n    return (\n        <div className=\"main-container\">\n             <h1 className=\"Heading\">\n                        <span>Weather Around the Globe</span>\n                    </h1>\n            <input \n                type=\"text\"\n                className=\"search\"\n                placeholder=\"Enter the City Name...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}onKeyPress={search}\n            />\n            {weather.main && ( \n                <div className=\"city\">\n                    <h2 className=\"city-name\">\n                        <span>{weather.name}</span>\n                        <sup>{weather.sys.country}</sup>\n                    </h2>\n                    <div className=\"city-temp\">\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"city-feels-like\">\n                        <span>Feels like: </span>\n                        {Math.round(weather.main.feels_like)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"city-temp-minmax\">\n                        <span> High: </span>\n                        {Math.round(weather.main.temp_max)}\n                        <sup>&deg;C </sup>\n                        <span> Low: </span>\n                        {Math.round(weather.main.temp_min)}\n                        <sup>&deg;C </sup>\n                    </div>\n                    <div className=\"city-humidity\">\n                        <span>Humidity: </span>\n                        {Math.round(weather.main.humidity)}\n                        <span>% </span>\n                    </div>\n                    <div className=\"info\">\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                        <p>{weather.weather[0].description}</p>\n                    </div>\n                    <div className=\"city-temp-latlog\">\n                        <span> Longitude: </span>\n                        {weather.coord.lon}\n                        <sup>&deg; </sup>\n                        <span> Lattitude: </span>\n                        {weather.coord.lat}\n                        <sup>&deg; </sup>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}