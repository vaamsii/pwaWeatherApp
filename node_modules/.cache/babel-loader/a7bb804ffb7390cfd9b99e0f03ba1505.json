{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vamsilingamaneni/Desktop/pwa-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vamsilingamaneni/Desktop/pwa-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';// this api from open weather map\nvar URL='https://api.openweathermap.org/data/2.5/weather';var API_KEY='f33a484cf794d08d0148764789aaba32';export var fetchWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(query){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(URL,{params:{q:query,units:'metric',APPID:API_KEY}});case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchWeather(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/vamsilingamaneni/Desktop/pwa-weather/src/api/fetchWeather.js"],"names":["axios","URL","API_KEY","fetchWeather","query","get","params","q","units","APPID","data"],"mappings":"iUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,GAAMC,CAAAA,GAAG,CAAG,iDAAZ,CACA,GAAMC,CAAAA,OAAO,CAAG,kCAAhB,CAEA,MAAO,IAAMC,CAAAA,YAAY,0FAAG,iBAAOC,KAAP,kKACDJ,CAAAA,KAAK,CAACK,GAAN,CAAUJ,GAAV,CAAe,CAClCK,MAAM,CAAE,CACJC,CAAC,CAAEH,KADC,CAEJI,KAAK,CAAE,QAFH,CAGJC,KAAK,CAAEP,OAHH,CAD0B,CAAf,CADC,uCAChBQ,IADgB,kBAChBA,IADgB,iCASjBA,IATiB,wDAAH,kBAAZP,CAAAA,YAAY,4CAAlB","sourcesContent":["import axios from 'axios';\n\n// this api from open weather map\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\nexport const fetchWeather = async (query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n\n    return data;\n}"]},"metadata":{},"sourceType":"module"}