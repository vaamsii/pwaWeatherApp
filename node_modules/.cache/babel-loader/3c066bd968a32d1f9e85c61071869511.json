{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/vamsilingamaneni/Desktop/pwa-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vamsilingamaneni/Desktop/pwa-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/vamsilingamaneni/Desktop/pwa-weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{fetchWeather}from'./api/fetchWeather';import'./App.css';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];//we are setting the weather to the data we recieve from API\nvar search=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.key==='Enter')){_context.next=6;break;}_context.next=3;return fetchWeather(query);case 3:data=_context.sent;//we will fetch the weather data based of the search\nsetWeather(data);setQuery('');//this will reset the query\ncase 6:case\"end\":return _context.stop();}}},_callee);}));return function search(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"Heading\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Weather Around the Globe\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search\",placeholder:\"Enter the City Name...\",value:query,onChange:function onChange(e){return setQuery(e.target.value);},onKeyPress:search}),weather.main&&/*#__PURE__*/_jsxs(\"div\",{className:\"city\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"city-name\",children:[/*#__PURE__*/_jsx(\"span\",{children:weather.name}),/*#__PURE__*/_jsx(\"sup\",{children:weather.sys.country})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-temp\",children:[Math.round(weather.main.temp),/*#__PURE__*/_jsx(\"sup\",{children:\"\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-feels-like\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Feels like: \"}),Math.round(weather.main.feels_like),/*#__PURE__*/_jsx(\"sup\",{children:\"\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-temp-minmax\",children:[/*#__PURE__*/_jsx(\"span\",{children:\" High: \"}),Math.round(weather.main.temp_max),/*#__PURE__*/_jsx(\"sup\",{children:\"\\xB0C \"}),/*#__PURE__*/_jsx(\"span\",{children:\" Low: \"}),Math.round(weather.main.temp_min),/*#__PURE__*/_jsx(\"sup\",{children:\"\\xB0C \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-humidity\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Humidity: \"}),Math.round(weather.main.humidity),/*#__PURE__*/_jsx(\"span\",{children:\"% \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"city-icon\",src:\"https://openweathermap.org/img/wn/\".concat(weather.weather[0].icon,\"@2x.png\"),alt:weather.weather[0].description}),/*#__PURE__*/_jsx(\"p\",{children:weather.weather[0].description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-temp-latlog\",children:[/*#__PURE__*/_jsx(\"span\",{children:\" Longitude: \"}),weather.coord.lon,/*#__PURE__*/_jsx(\"sup\",{children:\"\\xB0 \"}),/*#__PURE__*/_jsx(\"span\",{children:\" Lattitude: \"}),weather.coord.lat,/*#__PURE__*/_jsx(\"sup\",{children:\"\\xB0 \"})]})]})]});};export default App;","map":{"version":3,"sources":["/Users/vamsilingamaneni/Desktop/pwa-weather/src/App.js"],"names":["React","useState","fetchWeather","App","query","setQuery","weather","setWeather","search","e","key","data","target","value","main","name","sys","country","Math","round","temp","feels_like","temp_max","temp_min","humidity","icon","description","coord","lon","lat"],"mappings":"2jBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,YAAT,KAA6B,oBAA7B,CACA,MAAO,WAAP,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACYF,QAAQ,CAAC,EAAD,CADpB,wCACPG,KADO,eACAC,QADA,8BAEgBJ,QAAQ,CAAC,EAAD,CAFxB,yCAEPK,OAFO,eAEEC,UAFF,eAE8B;AAE5C,GAAMC,CAAAA,MAAM,0FAAG,iBAAOC,CAAP,gIACRA,CAAC,CAACC,GAAF,GAAU,OADF,gDAEYR,CAAAA,YAAY,CAACE,KAAD,CAFxB,QAEDO,IAFC,eAEiC;AAExCJ,UAAU,CAACI,IAAD,CAAV,CACAN,QAAQ,CAAC,EAAD,CAAR,CAAc;AALP,sDAAH,kBAANG,CAAAA,MAAM,4CAAZ,CASA,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACK,WAAI,SAAS,CAAC,SAAd,uBACW,kDADX,EADL,cAII,cACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAC,QAFd,CAGI,WAAW,CAAC,wBAHhB,CAII,KAAK,CAAEJ,KAJX,CAKI,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf,EALd,CAK8C,UAAU,CAAEL,MAL1D,EAJJ,CAWKF,OAAO,CAACQ,IAAR,eACG,aAAK,SAAS,CAAC,MAAf,wBACI,YAAI,SAAS,CAAC,WAAd,wBACI,sBAAOR,OAAO,CAACS,IAAf,EADJ,cAEI,qBAAMT,OAAO,CAACU,GAAR,CAAYC,OAAlB,EAFJ,GADJ,cAKI,aAAK,SAAS,CAAC,WAAf,WACKC,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaM,IAAxB,CADL,cAEI,8BAFJ,GALJ,cASI,aAAK,SAAS,CAAC,iBAAf,wBACI,sCADJ,CAEKF,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaO,UAAxB,CAFL,cAGI,8BAHJ,GATJ,cAcI,aAAK,SAAS,CAAC,kBAAf,wBACI,iCADJ,CAEKH,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaQ,QAAxB,CAFL,cAGI,+BAHJ,cAII,gCAJJ,CAKKJ,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaS,QAAxB,CALL,cAMI,+BANJ,GAdJ,cAsBI,aAAK,SAAS,CAAC,eAAf,wBACI,oCADJ,CAEKL,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaU,QAAxB,CAFL,cAGI,4BAHJ,GAtBJ,cA2BI,aAAK,SAAS,CAAC,MAAf,wBACI,YAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,6CAAuClB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBmB,IAA1D,WAA9B,CAAuG,GAAG,CAAEnB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBoB,WAA/H,EADJ,cAEI,mBAAIpB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBoB,WAAvB,EAFJ,GA3BJ,cA+BI,aAAK,SAAS,CAAC,kBAAf,wBACI,sCADJ,CAEKpB,OAAO,CAACqB,KAAR,CAAcC,GAFnB,cAGI,8BAHJ,cAII,sCAJJ,CAKKtB,OAAO,CAACqB,KAAR,CAAcE,GALnB,cAMI,8BANJ,GA/BJ,GAZR,GADJ,CAwDH,CArED,CAuEA,cAAe1B,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { fetchWeather } from './api/fetchWeather';\nimport './App.css';\n\nconst App = () => {\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({}); //we are setting the weather to the data we recieve from API\n    \n    const search = async (e) => {\n        if(e.key === 'Enter') { //once the search is done this will run\n            const data = await fetchWeather(query); //we will fetch the weather data based of the search\n\n            setWeather(data);\n            setQuery(''); //this will reset the query\n        }\n    }\n\n    return (\n        <div className=\"main-container\">\n             <h1 className=\"Heading\">\n                        <span>Weather Around the Globe</span>\n                    </h1>\n            <input\n                type=\"text\"\n                className=\"search\"\n                placeholder=\"Enter the City Name...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}onKeyPress={search}\n            />\n            {weather.main && ( \n                <div className=\"city\">\n                    <h2 className=\"city-name\">\n                        <span>{weather.name}</span>\n                        <sup>{weather.sys.country}</sup>\n                    </h2>\n                    <div className=\"city-temp\">\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"city-feels-like\">\n                        <span>Feels like: </span>\n                        {Math.round(weather.main.feels_like)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"city-temp-minmax\">\n                        <span> High: </span>\n                        {Math.round(weather.main.temp_max)}\n                        <sup>&deg;C </sup>\n                        <span> Low: </span>\n                        {Math.round(weather.main.temp_min)}\n                        <sup>&deg;C </sup>\n                    </div>\n                    <div className=\"city-humidity\">\n                        <span>Humidity: </span>\n                        {Math.round(weather.main.humidity)}\n                        <span>% </span>\n                    </div>\n                    <div className=\"info\">\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                        <p>{weather.weather[0].description}</p>\n                    </div>\n                    <div className=\"city-temp-latlog\">\n                        <span> Longitude: </span>\n                        {weather.coord.lon}\n                        <sup>&deg; </sup>\n                        <span> Lattitude: </span>\n                        {weather.coord.lat}\n                        <sup>&deg; </sup>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}