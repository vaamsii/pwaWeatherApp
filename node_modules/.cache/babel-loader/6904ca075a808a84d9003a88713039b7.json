{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vamsilingamaneni/Desktop/pwa-weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { fetchWeather } from './api/fetchWeather';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({}); //we are setting the weather to the data we recieve from API\n\n  const search = async e => {\n    if (e.key === 'Enter') {\n      //once the search is done this will run\n      const data = await fetchWeather(query); //we will fetch the weather data based of the search\n\n      setWeather(data);\n      setQuery(''); //this will reset the query\n\n      console.log(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      //search bar\n      type: \"text\",\n      className: \"search\",\n      placeholder: \"Search...\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      onKeyPress: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), weather.main && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"city-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: weather.sys.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-temp\",\n        children: [Math.round(weather.main.temp), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-feels-like\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Feels like: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), Math.round(weather.main.feels_like), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-temp-min\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" High: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), Math.round(weather.main.temp_max), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Low: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), Math.round(weather.main.temp_min), /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"\\xB0C \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"city-icon\",\n          src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n          alt: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vamsilingamaneni/Desktop/pwa-weather/src/App.js"],"names":["React","useState","fetchWeather","App","query","setQuery","weather","setWeather","search","e","key","data","console","log","target","value","main","name","sys","country","Math","round","temp","feels_like","temp_max","temp_min","icon","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { fetchWeather } from './api/fetchWeather';\nimport './App.css';\n\nconst App = () => {\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({}); //we are setting the weather to the data we recieve from API\n    \n    const search = async (e) => {\n        if(e.key === 'Enter') { //once the search is done this will run\n            const data = await fetchWeather(query); //we will fetch the weather data based of the search\n\n            setWeather(data);\n            setQuery(''); //this will reset the query\n            console.log(data);\n        }\n    }\n\n    return (\n        <div className=\"main-container\">\n            <input //search bar\n                type=\"text\"\n                className=\"search\"\n                placeholder=\"Search...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}onKeyPress={search}\n            />\n            {weather.main && ( \n                <div className=\"city\">\n                    <h2 className=\"city-name\">\n                        <span>{weather.name}</span>\n                        <sup>{weather.sys.country}</sup>\n                    </h2>\n                    <div className=\"city-temp\">\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"city-feels-like\">\n                        <span>Feels like: </span>\n                        {Math.round(weather.main.feels_like)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className=\"city-temp-min\">\n                        <span> High: </span>\n                        {Math.round(weather.main.temp_max)}\n                        <sup>&deg;C </sup>\n                        <span> Low: </span>\n                        {Math.round(weather.main.temp_min)}\n                        <sup>&deg;C </sup>\n                    </div>\n                    <div className=\"info\">\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                        <p>{weather.weather[0].description}</p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}